# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.url = jdbc:mysql://localhost:3306/blog
spring.datasource.url = jdbc:postgresql://localhost:5432/blog
spring.datasource.username = postgres
spring.datasource.password = str8line
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.datasource.data = classpath:static/db/postgres-data.sql

spring.resources.static-locations=classpath:/static,classpath:/static/images,file:///C:/dev/workspace/Blog/src/main/resources/static/uploads

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
server.port=5000

upload.file.tempdirectory=c:/dev/temp-dir
upload.file.directory=C:/dev/workspace/Blog/src/main/resources/static/uploads
upload.file.extensions=jpg,jpeg,gif,png